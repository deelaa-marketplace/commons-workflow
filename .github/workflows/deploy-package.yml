name: Deploy to ECS Test Cluster

name: "Build And Test"

on:
  workflow_call:
    inputs:
      java-version:
        type: string
        default: "17"
      update-coverage-comment:
        type: boolean
        default: true

env:
  AWS_REGION: eu-west-1
  ECR_REPOSITORY: order-service
  ECS_SERVICE: order-service
  ECS_CLUSTER: test
  ECS_TASK_DEFINITION: task-definition.json
  CONTAINER_NAME: order-service

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          GITHUB_ACTOR: ${{ secrets.GIT_AGENT_USER }}
          GITHUB_TOKEN: ${{ secrets.GIT_AGENT_TOKEN }}
        run: |
          # Build a docker image and push it to ECR so that it can be deployed to ECS.
          mvn package com.google.cloud.tools:jib-maven-plugin:build -Dimage=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.ECS_CLUSTER}}-${{ env.ECS_SERVICE}} --query taskDefinition > ${{ env.ECS_TASK_DEFINITION }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
