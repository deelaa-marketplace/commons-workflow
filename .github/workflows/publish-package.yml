name: "Publish Package"

on:
  workflow_call:
    inputs:
      java-version:
        type: string
        default: "17"
      allow-version-mismatch:
        type: boolean
        default: true
      skip-snapshots:
        type: boolean
        default: true
      blind-deployment:
        type: boolean
        default: true

jobs:
  deploy-to-github:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{inputs.java-version}}
          distribution: "temurin"
          cache: maven

      - name: Print Maven Settings
        shell: bash
        run: cat /home/runner/.m2/settings.xml

      - name: Determine version
        id: version
        shell: bash
        run: |-
          echo "package_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT \
          echo "release_version=${{ github.event.release.tag_name }}#v" >> $GITHUB_OUTPUT \

      - name: Print version
        shell: bash
        run: |-
          echo "package_version=${{steps.version.outputs.package_version}}" \
          echo "release_version=${{ steps.version.outputs.release_version }}" 

      - name: Deploy
        if: inputs.blind-deployment && (inputs.allow-version-mismatch || steps.version.outputs.release_version == steps.version.outputs.package_version)
        shell: bash
        run: >-
          mvn --batch-mode -DskipTests
          -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ github.repository }}
          -Dmaven.deploy.skip=${{ inputs.skip-snapshots && 'snapshots' || 'false' }} 
          clean deploy
        env:
          GITHUB_ACTOR: ${{ secrets.GIT_AGENT_USER }}
          GITHUB_TOKEN: ${{ secrets.GIT_AGENT_TOKEN }}

      - name: "Deploy Blind"
        if: ${{ inputs.blind-deployment && (inputs.allow-version-mismatch || steps.version.outputs.release_version == steps.version.outputs.package_version) }}
        shell: bash
        run: >-
          mvn --batch-mode -DskipTests
          -Dmaven.deploy.skip=${{ inputs.skip-snapshots && 'snapshots' || 'false' }}
          clean deploy
        env:
          GITHUB_ACTOR: ${{ secrets.GIT_AGENT_USER }}
          GITHUB_TOKEN: ${{ secrets.GIT_AGENT_TOKEN }}